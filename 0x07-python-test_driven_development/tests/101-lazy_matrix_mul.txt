The ``101-lazy_matrix_mul`` module
======================

Using ``lazy_matrix_mul``
-------------------

First import
``lazy_matrix_mul`` from the ``101-lazy_matrix_mul`` module:

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Now use it:

    >>> lazy_matrix_mul("hello", [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 0 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

    >>> lazy_matrix_mul([[1, 2], [3, 4]], "hello")
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6], "hello"])
    Traceback (most recent call last):
    TypeError: can only concatenate list (not "str") to list

    >>> lazy_matrix_mul(["h", [3, 4]], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    TypeError: can only concatenate str (not "list") to str

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 2)

    >>> lazy_matrix_mul([[]], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 0)

    >>> lazy_matrix_mul([], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 0)

    >>> lazy_matrix_mul([[1, "h"], [3, 4]], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    numpy.core._exceptions.UFuncTypeError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U21'), dtype('<U21')) -> dtype('<U21')

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [["h", 6], [7, 8]])
    Traceback (most recent call last):
    numpy.core._exceptions.UFuncTypeError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U21'), dtype('<U21')) -> dtype('<U21')

    >>> lazy_matrix_mul([[1, 2, 3], [3, 4]], [[5, 6], [7, 8]])
    array([list([1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4]),
           list([1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4])],
      	  dtype=object)

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6, 7], [7, 8]])
    array([list([5, 6, 7, 7, 8, 7, 8]),
    	   list([5, 6, 7, 5, 6, 7, 5, 6, 7, 7, 8, 7, 8, 7, 8, 7, 8])],
	  dtype=object)

    >>> lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], [[5, 6], [7, 8]])
    array([[19, 22],
    	   [43, 50],
      	   [67, 78]])

    >>> lazy_matrix_mul([[1, 2, 3], [3, 4, 3]], [[5, 6], [7, 8]])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 3)

    >>> lazy_matrix_mul([[1, 2, 3], [3, 4, 3]], [[5, 6, 3], [7, 8, 3]])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 3)

    >>> lazy_matrix_mul([[1, 2, 3], [3, 4, 3]], [[5, 6, 3], [7, 8, 3], [9, 10, 11]])
    array([[46, 52, 42],
    	   [70, 80, 54]])

    >>> lazy_matrix_mul((1, 2), [1, 2])
    5

    >>> lazy_matrix_mul([1, 2, 3], [[4], [5], [6]])
    array([32])
