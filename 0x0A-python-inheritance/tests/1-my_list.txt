The ``1-my_list`` module
======================

Using ``print_sorted``
-------------------

First import
``MyList`` from the ``1-my_list`` module:

    >>> MyList = __import__('1-my_list').MyList

Now use it:

    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> my_list
    [1, 4, 2, 3, 5]
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]
    >>> my_list.append(6)
    >>> my_list
    [1, 4, 2, 3, 5, 6]
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5, 6]
    >>> my_list.append(-1)
    >>> my_list
    [1, 4, 2, 3, 5, 6, -1]
    >>> my_list.print_sorted()
    [-1, 1, 2, 3, 4, 5, 6]
    >>> my_list.insert(1, 0)
    >>> my_list
    [1, 0, 4, 2, 3, 5, 6, -1]
    >>> my_list.insert(2, 4)
    >>> my_list
    [1, 0, 4, 4, 2, 3, 5, 6, -1]
    >>> my_list.count(4)
    2
    >>> my_list.print_sorted()
    [-1, 0, 1, 2, 3, 4, 4, 5, 6]
    >>> ml = MyList()
    >>> ml.print_sorted()
    []
    >>> ml.print_sorted([1, 2, 3])
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given
    >>> my_list.print_sorted([1, 2, 3])
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given
    >>> my_list.print_sorted(1)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given
    >>> my_list.pop()
    -1
    >>> my_list.print_sorted()
    [0, 1, 2, 3, 4, 4, 5, 6]
    >>> my_list.pop()
    6
    >>> my_list.print_sorted()
    [0, 1, 2, 3, 4, 4, 5]
    >>> my_list.pop()
    5
    >>> my_list.print_sorted()
    [0, 1, 2, 3, 4, 4]
    >>> ml = my_list.copy()
    >>> ml
    [1, 0, 4, 4, 2, 3]
    >>> type(ml)
    <class 'list'>
    >>> ml.clear()
    >>> ml
    []
    >>> ml = MyList()
    >>> type(ml)
    <class '1-my_list.MyList'>
